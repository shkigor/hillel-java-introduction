ЧИТАЕМ:

JAVA ОПЕРАТОРЫ ЦИКЛА (FOR, WHILE, DO-WHILE), ОПЕРАТОР BREAK
http://study-java.ru/uroki-java/java-operatory-tsikla-for-while-do-while-operator-break/

Циклы в Java
https://vertex-academy.com/tutorials/ru/cikly-v-java/

Циклы
https://metanit.com/java/tutorial/2.6.php


Задание 1. Суммирование цифр заданного числа.

    Напишите метод с именем sumDigits, у которого есть один параметр int с именем number.
    Если параметр > = 10, то метод должен обработать число и вернуть сумму всех цифр,
    в противном случае возвращается -1, чтобы указать недопустимое значение.

    Числа от 0 до 9 имеют 1 цифру, поэтому мы не хотим их обрабатывать,
    также мы не хотим обрабатывать отрицательные числа, поэтому также возвращаем -1 для отрицательных чисел.

    Например, вызов метода sumDigits (125) должен вернуть 8, так как 1 + 2 + 5 = 8.
    Вызов метода sumDigits (1) должен вернуть -1 в соответствии с требованиями, описанными выше.

    Добавьте некоторый код в метод main, чтобы проверить метод sumDigits и определить,
    что он работает правильно для допустимых и недопустимых значений, передаваемых в качестве аргументов.

    Подсказка:
    Используйте n% 10, чтобы извлечь наименее значимую цифру.
    Используйте n = n / 10, чтобы отбросить младшую цифру.


================================================================================================

Задание 2. Вычисление палиндрома.

    Напишите метод с именем isPalindrome с одним параметром int с именем number.

    Метод должен возвращать логическое значение.
    Он должен возвращать true, если число является числом палиндрома, в противном случае он должен возвращать false.

    Проверьте советы ниже для получения дополнительной информации о палиндромах.
    Пример ввода / вывода
    isPalindrome (-1221); → должен вернуть true
    isPalindrome (707); → должен вернуть true
    isPalindrome (11212); → должен вернуть false, потому что обратное значение равно 21211, а не равно 11212.

    Совет: Что такое палиндром? Палиндром - это число, которое при обращении равно исходному числу. Например: 121, 12321, 1001 и т.д.
    Логика для проверки палиндрома:
    Найдите обратное число от заданного числа. Сохраните его в некоторой переменной, скажем, в reverse. Сравните число с обратным.
    Если оба одинаковы, то число является палиндромом, иначе это не так.

    Логика для для нахождения обратного числа:
    Объявите и инициализируйте другую переменную для хранения обратного числа, например reverse = 0.
    Извлеките последнюю цифру данного числа, выполнив деление по модулю (остаток).
    Сохраните последнюю цифру в некоторой переменной скажем lastDigit = num % 10.
    Увеличьте разрядность обратного числа на единицу. Для увеличения разрядности умножьте
    переменную reverse на 10, например. reverse = reverse * 10.
    Добавьте lastDigit к reverse.
    Удалите последнюю цифру числа. Чтобы удалить последнюю цифру, разделите число на 10.
    Повторяйте шаги до тех пор, пока число не станет равным (или не превышающим) нуль.

    Воспользуйтесь циклом while.

