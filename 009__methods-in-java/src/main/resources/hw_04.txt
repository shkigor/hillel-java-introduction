ЧИТАЕМ:

Java — Операторы принятия решений
http://proglang.su/java/decision-making-operators

Java — Оператор if
http://proglang.su/java/operator-if

Java — Оператор if..else
http://proglang.su/java/operator-if-else

Java — Вложенный оператор if
http://proglang.su/java/embedded-operator-if

Методы в Java
https://vertex-academy.com/tutorials/ru/chto-takoe-metody-v-java/


Задание 1.

Преобразователь скорости с использованием методов

I часть:

1. Создайте новый проект speed-converter.
2. В проекте создайте класс с именем SpeedConverter.
3. В классе SpeedConverter создайте статический метод toMilesPerHour, 
   который имеет 1 параметр типа double с именем kilometersPerHour (км/ч).
   Метод должен вычислять значение миль в час по переданному аргументу километров в час.
   Метод должен возвращать округленное значение вычисления типа long.
   Если параметр kilometersPerHour меньше 0, метод toMilesPerHour должен вернуть -1,
   чтобы указать недопустимое значение. 
   В противном случае, если оно положительное, необходимо вычислить значение миль в час,
   округлить его и вернуть.
   Для преобразования и округления воспользуйтесь методом Math.round(). Метод возвращает long.

   Заметка: 1 миля в час - 1.609 километров в час

4. В проекте создайте класс с именем Main.
5. В классе Main создайте метод main, который будет служить точкой входа в ваше приложение.
   public static void main(String[] args) {
   }
6. В методе main используйте класс Scanner для ввода значения км/ч,
   который был описан в д/з №3.
7. В методе main вызовите метод toMilesPerHour
   Для вызова статического метода другого класса необходимо написать сначала имя класса,
   потом точку и затем имя метода.
   Например:
   SpeedConverter.toMilesPerHour(1.5);

   Протестируйте работу метода toMilesPerHour() с разными вариантами:

   toMilesPerHour(1.5); → должен возвращать значение 1
   toMilesPerHour(10.25); → должен возвращать значение 6
   toMilesPerHour(-5.6); → должен возвращать значение -1
   toMilesPerHour(25.42); → должен возвращать значение 16
   toMilesPerHour(75.114); → должен возвращать значение 47
8. В методе main выведите в консоль полученное значение миль/ч
   Miles = полученное_значение

II часть:

9. В классе SpeedConverter напишите другой метод с именем printConversion
   с одним параметром типа double с именем kilometersPerHour.

   Этот метод не должен ничего возвращать (void) и он должен 
   вычислить milesPerHour (миль в час) из параметра kilometersPerHour (километров в час).
   В методе printConversion, вызовите метод toMilesPerHour.
   
   Затем необходимо распечатать сообщение в формате "XX km/h = YY mi/h".
   XX представляет исходное значение километров в час kilometersPerHour.
   YY представляет округленные milesPerHour из параметра kilometersPerHour.
   Если параметр kilometersPerHour <0, выведите текст "Неверное значение".

   Примеры вызова метода printConversion():
   printConversion(1.5); → должен напечатать следующий тект (в консоль - System.out): 1.5 km/h = 1 mi/h
   printConversion(10.25); → должен напечатать следующий тект (в консоль - System.out): 10.25 km/h = 6 mi/h
   printConversion(-5.6); → должен напечатать следующий тект (в консоль - System.out): Неверное значение
   printConversion(25.42); → должен напечатать следующий тект (в консоль - System.out): 25.42 km/h = 16 mi/h
   printConversion(75.114); → должен напечатать следующий тект (в консоль - System.out): 75.114 km/h = 47 mi/h

Все методы должны быть объявлены как public static.

================================================================================================

Задание 2.

Вычисление индекса массы тела с использованием методов.

1. Создайте новый проект body-mass-index.
2. В проекте создайте класс с именем BodyMassIndex.
3. В классе SpeedConverter создайте статический метод calculateBodyMassIndex, который
   должен принимать два параметра:
   - масса тела в килограммах (weight)
   - рост в метрах (height)
   Метод должен возвращать результат вычисления индекса массы тела.
   https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D0%B4%D0%B5%D0%BA%D1%81_%D0%BC%D0%B0%D1%81%D1%81%D1%8B_%D1%82%D0%B5%D0%BB%D0%B0

4. В проекте создайте класс с именем Main.
5. В классе Main создайте метод main, который будет служить точкой входа в ваше приложение.
   В методе main создайте и проинициализируйте три переменные:
   - name (имя человека)
   - weight (масса человека)
   - height (рост человека)
6. В методе main вызовите метод calculateBodyMassIndex класса BodyMassIndex,
   в который передайте вышеописанные переменные.
7. Выведите результат в консоль.
8. В классе SpeedConverter создайте статический метод interpretation, который
   должен принимать один параметр:
   - вычисленное на предыдущем шаге значение индекса массы тела.
   
   Метод должен возвращать текстовое значение (соответствие между массой человека и его ростом).
   Логика метода следующая:
   - если индекс массы тела (далее ИМТ) меньше 16, метод должен возвращать
   строку "Выраженный дефицит массы тела";
   - если ИМТ больше либо равен 16 и меньше 18.5, метод должен возвращать
   строку "Недостаточная (дефицит) масса тела";
   - если ИМТ больше либо равен 18.5 и меньше 25, метод должен возвращать
   строку "Норма";
   - если ИМТ больше либо равен 25 и меньше 30, метод должен возвращать
   строку "Избыточная масса тела (предожирение)";
   - если ИМТ больше либо равен 30 и меньше 35, метод должен возвращать
   строку "Ожирение";
   - если ИМТ больше либо равен 35 и меньше 40, метод должен возвращать
   строку "Ожирение резкое";
   - во всех других случаях метод должен возвращать строку "Очень резкое ожирение"
9. В классе SpeedConverter создайте статический метод printResult, который
   должен принимать четыре параметра:
   - name (имя человека)
   - weight (масса человека)
   - height (рост человека)
   - bmi (ИМТ)
   Метод не должен возврашать никакого значения.
   В методе необходимо напечатать в консоль все параметры а также
   необходимо вывести в консоль результаты соответствия между массой человека и его ростом
   (вызвать метод interpretation).
10. В методе main класса Main вызовите метод printResult класса BodyMassIndex,
   в который передайте необходимые переменные.